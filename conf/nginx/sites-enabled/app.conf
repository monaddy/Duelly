# Upstream to API container
upstream api_upstream {
  server api:3000;
  keepalive 128;
}

server {
  listen 80 default_server reuseport;
  listen [::]:80 default_server reuseport;
  server_name _;

  # ACME challenge endpoint (HTTP-01)
  location ^~ /.well-known/acme-challenge/ {
    alias /var/www/certbot/.well-known/acme-challenge/;
    default_type "text/plain";
    allow all;
  }

  # Basic healthcheck for LB/K8s or uptime monitors
  location = /healthz {
    add_header Content-Type application/json always;
    return 200 '{"status":"ok"}';
  }

  # Static client (built output from Vite)
  root  /usr/share/nginx/html;
  index index.html;

  # Security headers (augment at app level as needed)
  add_header X-Content-Type-Options nosniff always;
  add_header X-Frame-Options SAMEORIGIN always;
  add_header Referrer-Policy no-referrer-when-downgrade always;
  add_header X-XSS-Protection "1; mode=block" always;

  # Static assets with caching (Vite emits hashed filenames)
  location ~* \.(?:js|mjs|css|png|jpg|jpeg|gif|svg|ico|webp|woff2?)$ {
    expires 7d;
    access_log off;
    try_files $uri =404;
  }

  # Single Page App fallback
  location / {
    try_files $uri $uri/ /index.html;
  }

  # REST API reverse proxy
  location /api/ {
    limit_req zone=api_rps burst=60 nodelay;
    limit_conn api_conns 200;

    proxy_http_version 1.1;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_connect_timeout 5s;
    proxy_send_timeout    60s;
    proxy_read_timeout    60s;

    proxy_pass http://api_upstream;
  }

  # Socket.io (WebSocket) reverse proxy
  location /socket.io/ {
    limit_req zone=api_rps burst=120 nodelay;
    limit_conn api_conns 1000;

    proxy_http_version 1.1;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_read_timeout 3600s;
    proxy_send_timeout 120s;
    proxy_buffering off;

    proxy_pass http://api_upstream/socket.io/;
  }

  # --- TLS Guidance ---
  # After obtaining Let's Encrypt certs into /etc/letsencrypt,
  # add a 443 server{} in this file and (optionally) redirect HTTP->HTTPS.
  # See docs/SECURITY.md for ready-to-copy snippets.
}
