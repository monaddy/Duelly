// Prisma schema â€” Backgammon Mini App (v1 bootstrap)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  tgId        String   @unique
  username    String?
  firstName   String?
  lastName    String?
  matchesP1   Match[]  @relation("P1")
  matchesP2   Match[]  @relation("P2")
  ledger      LedgerEntry[]
}

model Match {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  status      String
  p1Id        String?
  p2Id        String?
  p1          User?    @relation("P1", fields: [p1Id], references: [id])
  p2          User?    @relation("P2", fields: [p2Id], references: [id])
  entryCents  Int
  currency    String
  winnerId    String?
  rngCommits  RngCommit[]
}

model RngCommit {
  id              String   @id @default(cuid())
  createdAt       DateTime @default(now())
  matchId         String
  match           Match    @relation(fields: [matchId], references: [id])
  serverCommitHex String
  serverSeedHex   String?
  clientSaltHex   String?
  revealed        Boolean  @default(false)
}

model LedgerEntry {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  amountCents Int
  type        String
  ref         String?
  memo        String?
}

model WebhookEvent {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  provider  String
  eventType String
  rawJson   Json
  handled   Boolean  @default(false)
  dedupeKey String   @unique
}
