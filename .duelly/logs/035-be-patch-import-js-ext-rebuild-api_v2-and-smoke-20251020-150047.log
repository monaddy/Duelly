[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# trap 'code=$?; echo "::DUELLY::step=$STEP_ID status=error code=$code line=$LINENO log=$LOG_FILE" >&2; exit $code' ERR
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # נעילה
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# LOCK_FILE="$DUELLY_DIR/duelly.lock"; mkdir -p "$(dirname "$LOCK_FILE")"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# if command -v flock >/dev/null 2>&1; then exec 9>"$LOCK_FILE"; flock -n 9 || { echo "::DUELLY::step=$STEP_ID status=error code=LOCKED notes=another step running"; exit 1; }; fi
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# echo "::DUELLY::step=$STEP_ID status=running time=$(date -Is)"
[?2004l::DUELLY::step=035-be-patch-import-js-ext-rebuild-api_v2-and-smoke status=running time=2025-10-20T15:00:47+00:00
[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# API_DIR="services/api-v2"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# SRC_DIR="$API_DIR/src"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# ROUTES_DIR="$SRC_DIR/routes"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# MAIN_CAND=( "$SRC_DIR/index.ts" "$SRC_DIR/server.ts" "$SRC_DIR/app.ts" )
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# [ -d "$SRC_DIR" ] || { echo "ERROR: missing $SRC_DIR"; exit 2; }
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # 1) תיקון import ל-'.js' בכל אחד מקבצי ה-main (static+dynamic import)
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# TS_NOW="$(date +%s)"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# patched=0
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# for f in "${MAIN_CAND[@]}"; do
[?2004l[?2004h>   [ -f "$f" ] || continue
[?2004l[?2004h>   before_sha="$(sha1sum "$f" | awk '{print $1}')"
[?2004l[?2004h>   cp -a "$f" "$f.bak.$TS_NOW"
[?2004l[?2004h> 
[?2004l[?2004h>   # static import:  import ... from './routes/rng-verify'
[?2004l[?2004h>   sed -E -i \
[?2004l[?2004h>     -e "s@(from[[:space:]]+['\"])\\./routes/rng-verify(\\.ts)?(['\"])@\\1./routes/rng-verify.js\\3@g" \
[?2004l[?2004h>     -e "s@(from[[:space:]]+['\"])\\./routes/rng-verify/?(index)?(\\.ts)?(['\"])@\\1./routes/rng-verify.js\\4@g" \
[?2004l[?2004h>     "$f"
[?2004l[?2004h> 
[?2004l[?2004h>   # dynamic import: import('./routes/rng-verify')
[?2004l[?2004h>   sed -E -i \
[?2004l[?2004h>     -e "s@import\\((['\"])\\./routes/rng-verify/?(index)?(\\.ts)?\\1\\)@import(\\1./routes/rng-verify.js\\1)@g" \
[?2004l[?2004h>     "$f"
[?2004l[?2004h> 
[?2004l[?2004h>   after_sha="$(sha1sum "$f" | awk '{print $1}')"
[?2004l[?2004h>   if [ "$before_sha" != "$after_sha" ]; then
[?2004l[?2004h>     echo "patched import path in: $f"
[?2004l[?2004h>     patched=$((patched+1))
[?2004l[?2004h>   else
[?2004l[?2004h>     # אם אין התאמה — נציג קונטקסט לאבחון
[?2004l[?2004h>     echo "no import change needed in: $f"
[?2004l[?2004h>     grep -nE "rng-verify|register\\(|listen|ready" "$f" || true
[?2004l[?2004h>   fi
[?2004l[?2004h> 
[?2004l[?2004h>   # ודא רישום הפלגאין עם prefix '/api/v2' (ינרמל כל רישום קיים)
[?2004l[?2004h>   if grep -qE "app\.register\\([^)]*rngVerifyRoute" "$f"; then
[?2004l[?2004h>     sed -E -i "s@app\.register\\([^)]*rngVerifyRoute[^)]*\\)@app.register(rngVerifyRoute, { prefix: '/api/v2' })@g" "$f"
[?2004l[?2004h>   fi
[?2004l[?2004h> done
[?2004lpatched import path in: services/api-v2/src/index.ts
[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# echo "files patched count: $patched"
[?2004lfiles patched count: 1
[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # 2) Rebuild לשירות api_v2 (זה שמקבל את /api/v2/* דרך Nginx)
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# COMPOSE_BIN=""
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# if command -v docker >/dev/null 2>&1; then
[?2004l[?2004h>   if docker compose version >/dev/null 2>&1; then COMPOSE_BIN="docker compose"; elif command -v docker-compose >/dev/null 2>&1; then COMPOSE_BIN="docker-compose"; fi
[?2004l[?2004h> fi
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# [ -n "$COMPOSE_BIN" ] || { echo "ERROR: docker compose not available"; exit 3; }
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# [ -f docker-compose.yml ] || { echo "ERROR: docker-compose.yml not found"; exit 4; }
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# SVC="$($COMPOSE_BIN config --services 2>/dev/null | grep -E '^api[_-]?v2$' | head -n1 || true)"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# [ -n "$SVC" ] || { echo "ERROR: api_v2 service not found in compose"; $COMPOSE_BIN config --services || true; exit 5; }
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# echo "Rebuilding compose service: $SVC"
[?2004lRebuilding compose service: api_v2
[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# $COMPOSE_BIN up -d --build "$SVC"
[?2004ltime="2025-10-20T15:00:48Z" level=warning msg="The \"POSTGRES_DB\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:00:48Z" level=warning msg="The \"POSTGRES_USER\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:00:48Z" level=warning msg="The \"POSTGRES_PASSWORD\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:00:48Z" level=warning msg="The \"POSTGRES_USER\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:00:48Z" level=warning msg="The \"POSTGRES_DB\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:00:48Z" level=warning msg="The \"REDIS_PASSWORD\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:00:48Z" level=warning msg="The \"REDIS_PASSWORD\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:00:48Z" level=warning msg="The \"ALLOWED_ORIGINS\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:00:48Z" level=warning msg="The \"TELEGRAM_PAYMENT_PROVIDER_TOKEN\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:00:48Z" level=warning msg="The \"REDIS_PASSWORD\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:00:48Z" level=warning msg="The \"TELEGRAM_BOT_TOKEN\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:00:48Z" level=warning msg="The \"HMAC_SECRET\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:00:48Z" level=warning msg="The \"JWT_SECRET\" variable is not set. Defaulting to a blank string."
#1 [internal] load local bake definitions
#1 reading from stdin 543B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 594B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:20-bullseye
#3 DONE 0.0s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [build  1/10] FROM docker.io/library/node:20-bullseye
#5 DONE 0.0s

#6 [internal] load build context
#6 transferring context: 5.96kB done
#6 DONE 0.0s

#7 [build  3/10] COPY services/api-v2/package.json ./package.json
#7 CACHED

#8 [build  6/10] RUN npx prisma generate
#8 CACHED

#9 [build  5/10] COPY prisma ./prisma
#9 CACHED

#10 [build  4/10] RUN npm install
#10 CACHED

#11 [build  2/10] WORKDIR /app
#11 CACHED

#12 [build  7/10] COPY services/api-v2/tsconfig.json ./tsconfig.json
#12 CACHED

#13 [build  8/10] COPY services/api-v2/src ./src
#13 DONE 0.0s

#14 [build  9/10] RUN npm run build
#14 0.386 
#14 0.386 > backgammon-api-v2@0.1.0 build
#14 0.386 > tsc
#14 0.386 
#14 DONE 6.0s

#15 [build 10/10] RUN npm prune --omit=dev
#15 1.749 
#15 1.749 up to date, audited 125 packages in 1s
#15 1.749 
#15 1.749 8 packages are looking for funding
#15 1.749   run `npm fund` for details
#15 1.755 
#15 1.755 2 moderate severity vulnerabilities
#15 1.755 
#15 1.755 To address all issues (including breaking changes), run:
#15 1.755   npm audit fix --force
#15 1.755 
#15 1.755 Run `npm audit` for details.
#15 DONE 1.8s

#16 [stage-1 3/6] COPY --from=build /app/node_modules ./node_modules
#16 CACHED

#17 [stage-1 4/6] COPY --from=build /app/dist ./dist
#17 DONE 0.0s

#18 [stage-1 5/6] COPY --from=build /app/prisma ./prisma
#18 DONE 0.0s

#19 [stage-1 6/6] COPY --from=build /app/package.json ./package.json
#19 DONE 0.0s

#20 exporting to image
#20 exporting layers 0.0s done
#20 writing image sha256:79b07cdb77ef3ffebdac90fa0c6c34f34d2daa526437ad225aded7798f5f17ab done
#20 naming to docker.io/library/backgammon-mini-app-api_v2 done
#20 DONE 0.0s

#21 resolving provenance for metadata file
#21 DONE 0.0s
 backgammon-mini-app-api_v2  Built
 Container backgammon-mini-app-redis-1  Running
 Container backgammon-mini-app-postgres-1  Running
 Container backgammon-mini-app-api_v2-1  Recreate
 Container backgammon-mini-app-api_v2-1  Recreated
 Container backgammon-mini-app-api_v2-1  Starting
 Container backgammon-mini-app-api_v2-1  Started
[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# $COMPOSE_BIN ps | sed -n '1,8p' || true
[?2004ltime="2025-10-20T15:01:09Z" level=warning msg="The \"TELEGRAM_BOT_TOKEN\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:01:09Z" level=warning msg="The \"JWT_SECRET\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:01:09Z" level=warning msg="The \"ALLOWED_ORIGINS\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:01:09Z" level=warning msg="The \"TELEGRAM_PAYMENT_PROVIDER_TOKEN\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:01:09Z" level=warning msg="The \"HMAC_SECRET\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:01:09Z" level=warning msg="The \"REDIS_PASSWORD\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:01:09Z" level=warning msg="The \"POSTGRES_DB\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:01:09Z" level=warning msg="The \"POSTGRES_USER\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:01:09Z" level=warning msg="The \"POSTGRES_PASSWORD\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:01:09Z" level=warning msg="The \"POSTGRES_USER\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:01:09Z" level=warning msg="The \"POSTGRES_DB\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:01:09Z" level=warning msg="The \"REDIS_PASSWORD\" variable is not set. Defaulting to a blank string."
time="2025-10-20T15:01:09Z" level=warning msg="The \"REDIS_PASSWORD\" variable is not set. Defaulting to a blank string."
NAME                             IMAGE                        COMMAND                  SERVICE    CREATED          STATUS                  PORTS
backgammon-mini-app-api-1        backgammon-mini-app-api      "docker-entrypoint.s…"   api        2 hours ago      Up 2 hours (healthy)    
backgammon-mini-app-api_v2-1     backgammon-mini-app-api_v2   "docker-entrypoint.s…"   api_v2     11 seconds ago   Up Less than a second   
backgammon-mini-app-nginx-1      nginx:1.27-alpine            "/docker-entrypoint.…"   nginx      2 days ago       Up 2 days               0.0.0.0:80->80/tcp, [::]:80->80/tcp, 0.0.0.0:443->443/tcp, [::]:443->443/tcp
backgammon-mini-app-postgres-1   postgres:16-alpine           "docker-entrypoint.s…"   postgres   2 days ago       Up 2 days (healthy)     
backgammon-mini-app-redis-1      redis:7-alpine               "docker-entrypoint.s…"   redis      2 days ago       Up 2 days (healthy)     
backgammon-mini-app-wildbg-1     backgammon-mini-app-wildbg   "docker-entrypoint.s…"   wildbg     6 days ago       Up 6 days (healthy)     
[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # 3) המתנה ל-Health=OK
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# API_BASE="https://play.duelly.online/api/v2"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# for i in $(seq 1 30); do
[?2004l[?2004h>   H="$(curl -sS "$API_BASE/health" || true)"
[?2004l[?2004h>   if echo "$H" | grep -q '"ok":true'; then echo "health ready: $H"; break; fi
[?2004l[?2004h>   echo "health not ready yet (try $i/30)"; sleep 2
[?2004l[?2004h>   [ "$i" -lt 30 ] || { echo "ERROR: /health did not become ok"; exit 6; }
[?2004l[?2004h> done
[?2004lhealth not ready yet (try 1/30)
health ready: {"ok":true}
[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # 4) עשן E2E — match → commit → verify(before) → reveal → verify(after)
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# HDR=(-H "content-type: application/json" -H "accept: application/json")
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# MATCH_BODY="$SMK_DIR/match.$(date +%s).json"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# MC="$(curl -sS -o "$MATCH_BODY" -w "%{http_code}" -X POST "$API_BASE/matches" "${HDR[@]}" -d '{}' || true)"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# echo "POST /matches -> $MC"; [ "$MC" = "200" ] || [ "$MC" = "201" ] || { echo "BODY:"; cat "$MATCH_BODY"; exit 10; }
[?2004lPOST /matches -> 200
[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# match_id="$(sed -n 's/.*"id":"\([0-9a-fA-F-]\{36\}\)".*/\1/p' "$MATCH_BODY" | head -n1)"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# COMMIT_BODY="$SMK_DIR/commit.$match_id.json"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# CC="$(curl -sS -o "$COMMIT_BODY" -w "%{http_code}" -X POST "$API_BASE/rng/commit" "${HDR[@]}" -d "{\"matchId\":\"$match_id\"}" || true)"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# echo "POST /rng/commit -> $CC"; [ "$CC" = "200" ] || [ "$CC" = "201" ] || { echo "BODY:"; cat "$COMMIT_BODY"; exit 11; }
[?2004lPOST /rng/commit -> 200
[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# commit_id="$(sed -n 's/.*"id":"\([0-9a-fA-F-]\{36\}\)".*/\1/p' "$COMMIT_BODY" | head -n1)"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# VER1_BODY="$SMK_DIR/verify.before.$commit_id.json"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# V1="$(curl -sS -o "$VER1_BODY" -w "%{http_code}" "$API_BASE/rng/verify?id=$commit_id" || true)"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# echo "GET /rng/verify (before) -> $V1"; [ "$V1" = "200" ] || { echo "BODY:"; cat "$VER1_BODY"; exit 12; }
[?2004lGET /rng/verify (before) -> 200
[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# REVEAL_BODY="$SMK_DIR/reveal.$commit_id.json"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# R1="$(curl -sS -o "$REVEAL_BODY" -w "%{http_code}" -X POST "$API_BASE/rng/reveal" "${HDR[@]}" -d "{\"id\":\"$commit_id\"}" || true)"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# echo "POST /rng/reveal -> $R1"; [ "$R1" = "200" ] || { echo "BODY:"; cat "$REVEAL_BODY"; exit 13; }
[?2004lPOST /rng/reveal -> 500
BODY:
{"statusCode":500,"error":"Internal Server Error","message":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"serverSeedHex\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}logout
