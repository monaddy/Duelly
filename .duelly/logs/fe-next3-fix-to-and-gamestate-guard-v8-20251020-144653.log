[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# trap 'code=$?; echo "::DUELLY::step='$STEP_ID' status=error code=$code line=$LINENO log=$LOG_FILE"; exit $code' ERR
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# LOCK_FILE="$DUELLY_DIR/duelly.lock"; exec 9>"$LOCK_FILE"; flock -n 9 || { echo "::DUELLY::step=$STEP_ID status=error code=LOCKED time=$(date -Is) notes=\"another step running\""; exit 1; }
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# echo "::DUELLY::step=$STEP_ID status=running time=$(date -Is) notes=\"eliminate undefined from PixiBoard.to + harden Game.tsx nullability; then build + theme ops + QA\""
[?2004l::DUELLY::step=fe-next3-fix-to-and-gamestate-guard-v8 status=running time=2025-10-20T14:46:53+00:00 notes="eliminate undefined from PixiBoard.to + harden Game.tsx nullability; then build + theme ops + QA"
[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # =============================================================================
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # 1) PixiBoard.tsx â€” coalesce moveAttempt.to (no undefined), use typed resolver
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # =============================================================================
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# PB="src/components/PixiBoard.tsx"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# if [ -f "$PB" ]; then
[?2004l[?2004h>   cp -a "$PB" "$PB.bak.$(date +%s)"
[?2004l[?2004h>   # (a) Add MoveTarget + resolver exactly once, right after imports
[?2004l[?2004h>   if ! grep -q "type MoveTarget = number | 'bar' | 'bearoff-white' | 'bearoff-black'" "$PB"; then
[?2004l[?2004h>     awk 'BEGIN{ins=0}
[?2004l[?2004h>       /^import /{print; next}
[?2004l[?2004h>       { if(!ins){ 
[?2004l[?2004h>           print "type MoveTarget = number | '\''bar'\'' | '\''bearoff-white'\'' | '\''bearoff-black'\'';";
[?2004l[?2004h>           print "function resolveTo(to: number | '\''bar'\'' | '\''bearoff-white'\'' | '\''bearoff-black'\'' | undefined,";
[?2004l[?2004h>           print "                 fallback: number | '\''bar'\'' | '\''bearoff-white'\'' | '\''bearoff-black'\''): MoveTarget {";
[?2004l[?2004h>           print "  return (typeof to === '\''undefined'\'' ? fallback : to) as MoveTarget;";
[?2004l[?2004h>           print "}";
[?2004l[?2004h>           ins=1 
[?2004l[?2004h>         }
[?2004l[?2004h>         print 
[?2004l[?2004h>       }' "$PB" > "$PB.new" && mv "$PB.new" "$PB"
[?2004l[?2004h>   fi
[?2004l[?2004h> 
[?2004l[?2004h>   # (b) Any direct uses of moveAttempt.to â†’ resolved value
[?2004l[?2004h>   perl -0777 -i -pe 's/\bmoveAttempt\.to\b/resolveTo(moveAttempt?.to, from)/g' "$PB" || true
[?2004l[?2004h> 
[?2004l[?2004h>   # (c) Canonicalize common declarations/assignments for `to`
[?2004l[?2004h>   #    const to = ...  â†’ explicitly typed via resolver
[?2004l[?2004h>   perl -0777 -i -pe 's/\bconst\s+to\s*=\s*\(moveAttempt\?\.\s*to\s*\?\?\s*from\)\s*;/const to: MoveTarget = resolveTo(moveAttempt?.to, from);/g' "$PB" || true
[?2004l[?2004h>   perl -0777 -i -pe 's/\bconst\s+to\s*=\s*moveAttempt\.to\s*;/const to: MoveTarget = resolveTo(moveAttempt?.to, from);/g' "$PB" || true
[?2004l[?2004h>   #    destructure: const { to } = moveAttempt; â†’ explicit, non-undefined alias
[?2004l[?2004h>   perl -0777 -i -pe 's/const\s*\{\s*to\s*\}\s*=\s*moveAttempt\s*;/const to: MoveTarget = resolveTo(moveAttempt?.to, from);/g' "$PB" || true
[?2004l[?2004h> 
[?2004l[?2004h>   # (d) Property payloads: to: moveAttempt.to â†’ to: resolveTo(...)
[?2004l[?2004h>   perl -0777 -i -pe 's/(to\s*:\s*)moveAttempt\.to/\1resolveTo(moveAttempt?.to, from)/g' "$PB" || true
[?2004l[?2004h> fi
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # =============================================================================
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # 2) Game.tsx â€” early non-null guard + alias, redirect arg/prop uses to alias
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # =============================================================================
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# GAME="src/routes/Game.tsx"
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# if [ -f "$GAME" ]; then
[?2004l[?2004h>   cp -a "$GAME" "$GAME.bak.$(date +%s)"
[?2004l[?2004h>   # Ensure nullable state declaration
[?2004l[?2004h>   perl -0777 -i -pe 's/useState<\s*GameState\s*>\(\s*null\s*\)/useState<GameState | null>(null)/g' "$GAME" || true
[?2004l[?2004h> 
[?2004l[?2004h>   # Insert early guard if missing
[?2004l[?2004h>   if ! grep -q "if (gameState == null)" "$GAME"; then
[?2004l[?2004h>     perl -0777 -i -pe "s/(useState<\s*GameState\s*\|\s*null\s*>\(\s*null\s*\)\s*\)\s*;?)/\\1\nif (gameState == null) { return null; }\n/;" "$GAME" || true
[?2004l[?2004h>   fi
[?2004l[?2004h> 
[?2004l[?2004h>   # Add non-null alias immediately after the guard (only once)
[?2004l[?2004h>   if ! grep -q "const gameStateNN:" "$GAME"; then
[?2004l[?2004h>     perl -0777 -i -pe 's/(if\s*\(\s*gameState\s*==\s*null\s*\)\s*\{\s*return\s+null;\s*\}\s*)/\1\nconst gameStateNN: GameState = gameState as GameState;\n/;' "$GAME" || true
[?2004l[?2004h>   fi
[?2004l[?2004h> 
[?2004l[?2004h>   # Redirect the most common usages to the NN alias (avoid destructure and setState)
[?2004l[?2004h>   perl -0777 -i -pe 's/=\s*\{gameState\}/={gameStateNN}/g' "$GAME" || true
[?2004l[?2004h>   perl -0777 -i -pe 's/\(\s*gameState\s*\)/\(gameStateNN\)/g' "$GAME" || true
[?2004l[?2004h>   perl -0777 -i -pe 's/,\s*gameState\s*\)/, gameStateNN\)/g' "$GAME" || true
[?2004l[?2004h>   perl -0777 -i -pe 's/\(\s*gameState\s*,/\(gameStateNN,/g' "$GAME" || true
[?2004l[?2004h>   # Avoid touching: const [gameState, setGameState] = ..., setGameState(...), type annotations, etc.
[?2004l[?2004h> fi
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # =============================================================================
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # 3) Commit if changed
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # =============================================================================
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# if git rev-parse --git-dir >/dev/null 2>&1; then
[?2004l[?2004h>   git add -A
[?2004l[?2004h>   if ! git diff --cached --quiet --ignore-submodules --; then
[?2004l[?2004h>     git commit -m "DUELLY FE: resolve undefined in PixiBoard.to via typed resolver; enforce non-null GameState alias and redirect usages"
[?2004l[?2004h>   fi
[?2004l[?2004h> fi
[?2004l[feat/qa-stage7-perf-fairness a389654] DUELLY FE: resolve undefined in PixiBoard.to via typed resolver; enforce non-null GameState alias and redirect usages
 5 files changed, 571 insertions(+), 1 deletion(-)
 create mode 100644 .duelly/logs/033-be-rng-verify-rebuild-api_v2-and-smoke-20251020-140709.log
 create mode 100644 .duelly/logs/fe-next3-fix-to-and-gamestate-guard-v8-20251020-144653.log
 create mode 100644 src/components/PixiBoard.tsx.bak.1760971613
 create mode 100644 src/routes/Game.tsx.bak.1760971613
[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# 
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # =============================================================================
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # 4) Rebuild + theme ops + QA
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# # =============================================================================
[?2004l[?2004h]0;root@Duelly-Dev: ~/backgammon-mini-approot@Duelly-Dev:~/backgammon-mini-app# npm run -s build
[?2004lsrc/components/PixiBoard.tsx(124,58): error TS2322: Type 'number | "bar" | "bearoff-white" | "bearoff-black" | undefined' is not assignable to type 'number | "bar" | "bearoff-white" | "bearoff-black"'.
  Type 'undefined' is not assignable to type 'number | "bar" | "bearoff-white" | "bearoff-black"'.
src/routes/Game.tsx(26,16): error TS2345: Argument of type 'GameState | null' is not assignable to parameter of type 'GameState'.
  Type 'null' is not assignable to type 'GameState'.
::DUELLY::step=fe-next3-fix-to-and-gamestate-guard-v8 status=error code=1 line=95 log=/root/backgammon-mini-app/.duelly/logs/fe-next3-fix-to-and-gamestate-guard-v8-20251020-144653.log
